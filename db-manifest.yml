apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-mysql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-mysql-db
  template:
    metadata:
      name: my-mysql-pod
      labels:
        app: my-mysql-db
    spec:
      containers:
        - name: mysql-db
          image: mysql:latest # mysql
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-volume
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-root
                  key: password
          ports:
            - containerPort: 3306
          livenessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - -h
                - localhost
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          readinessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - -h
                - localhost
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
      volumes:
        - name: mysql-volume
          persistentVolumeClaim:
            claimName: mysql-pvc

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-mongo-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: my-mongo-db
  template:
    metadata:
      name: my-mongo-pod
      labels:
        app: my-mongo-db
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: mongo-db
          image: mongo:latest # mongo
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          args: [ "mongod", "--dbpath","/volume/mongo-pv" ]
          env:
            - name: MONGO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: mongo-root
                  key: username
            - name: MONGO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-root
                  key: password
          volumeMounts:
            - name: mongo-volume
              mountPath: /volume/mongo-pv
          ports:
            - containerPort: 27017
      volumes:
        - name: mongo-volume
          persistentVolumeClaim:
            claimName: mongo-pvc


---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  labels:
    app: my-mongo-db-service
spec:
  type: LoadBalancer
  ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
  selector:
    app: my-mongo-db
